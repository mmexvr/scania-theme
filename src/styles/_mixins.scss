@import '../variables';

@mixin renderMap($mapping, $prop) {
  @each $key, $value in $mapping {
    #{$key} { #{$prop}: $value; }
  }
}

@mixin text($color, $important: true) {
  @include rule('color', $color, $important);
}

@mixin background($color, $important: true) {
  @include rule('background-color', $color, $important);
}

@mixin border($color, $important: true) {
  @include rule('border-color', $color, $important);
}

@mixin component($type, $name: '') {
  $color: 'light';

  // When dealing with alert we want the color to be the same as the background-color
  @if $name == 'alert' OR $name == 'table' {
    $color: $type;

    // TODO: When we have color tints lets use those instead of box/text-shadow
    box-shadow: inset 0 0 0 99999px rgba(255, 255, 255, 0.7);
    text-shadow: 0px 0px #000;
  }

  @include background($type, false);
  @include text(if($type == 'light' OR $type == 'secondary', 'dark', $color), false);
}

@mixin rule($type, $color, $important) {
  #{$type}: map-get($interaction-colors, $color) if($important, !important, null);
  #{$type}: var(--#{$color}) if($important, !important, null);
}

@mixin form-validation-state($state, $data) {
  .#{$state}-feedback {
    border: 1px solid $light-01;
    border-left: 4px solid map-get($theme-colors, map-get($data, 'border-color'));
    color: $dark;
    line-height: normal;
    background-color: #fff;
    box-shadow: 0 0 8px rgba(0, 0, 0, 0.08);
    padding: .8rem;
  }

  .form-control {

    &.is-#{$state},
    .was-validated &:#{$state} {
      background-image: none;
      padding-right: 1.2rem;

      @each $key, $value in $data {
        #{$key} : map-get($theme-colors, $value);
        #{$key} : var(--#{$value});
      }

      &:focus {
        box-shadow: none;
        border-color: map-get($theme-colors, map-get($data, 'border-color'));
        border-color: var(--(map-get($data, 'border-color')));
      }
    }
  }
}