@import '../variables';
@import '../mixins';

// TODO: We might wanna add a global loader to load **
@import '../components/alert';
@import '../components/button';
@import '../components/table';

// TODO: Refine this primary color setup
.progress-bar {
  @include background('primary');
}
.list-group-item.active {
  @include component('primary');
  @include border('primary');
}
.nav-pills {
  
  .nav-link.active,
  .show > .nav-link {
    @include component('primary');
  }
}
.page-link {
  @include text('primary', false);

  .page-item.active & {
    @include component('primary');
    @include border('primary');
  }
}

@each $type in $all-colors {
  $theme-colors: map-merge($theme-colors, $type);
}

$components: badge, list-group-item;
$componentsLight: alert, table;

@each $type in $types {
  .bg-#{$type} {
    // @include background($type);
    background-color: map-get($interaction-colors, $type);
    background-color: var(--#{$type});
  }

  .text-#{$type} {
    // @include text($type);
    color: map-get($interaction-colors, $type);
    color: var(--#{$type});
  }

  .border-#{$type} {
    // @include border($type);
    border-color: map-get($interaction-colors, $type);
    border-color: var(--#{$type});
  }

  @each $element in $components {
    .#{$element}-#{$type} {
      // @include component($type, $element);
      background-color: map-get($interaction-colors, $type);
      background-color: var(--#{$type});
      color: $white;
      color: var(--white);
    }
  }

  @each $element in $componentsLight {
    @if map-get($theme-colors, #{$type}-#{'01'}) {
      .#{$element}-#{$type} {
        // @include component($type, $element);
        background-color: map-get($theme-colors, #{$type}-#{'01'});
        background-color: var(--#{$type}-#{'01'});
        color: map-get($theme-colors, #{$type}-#{'03'});
        color: var(--#{$type}-#{'03'});
        border-color: map-get($theme-colors, #{$type}-#{'02'});
        border-color: var(--#{$type}-#{'02'});
      }
    }
  }
}

@each $type in $interaction-types2 {
  @each $element in $components {
    .#{$element}-#{$type} {
      color: $dark;
      color: var(--dark-#{'03'});
    }
  }

  @each $element in $componentsLight {
    @if map-get($theme-colors, #{$type}-#{'01'}) {
      .#{$element}-#{$type} {
        // @include component($type, $element);
        background-color: $type;
        background-color: var(--#{$type}-#{'01'});
        color: $type;
        color: var(--#{$type}-#{'03'});
      }
    }
  }
}


// @each $key, $value in $util-props {
//   .#{$key} {
   
//     @each $type in $types {
//       &-#{$type} {
//         #{$value}: map-get($interaction-colors, $type) !important;
//         #{$value}: var(--#{$type}) !important;
//       }
//     }
//   }
// }

// @each $el in $elements {
//   .#{$el} {
//     @each $type in join($interaction-types, $interaction-types3) {
//       $selector: if($el == table, '&-#{$type} th, &-#{$type} td', '&-#{$type}');
//       #{$selector} {
//         background-color: map-get($interaction-colors, $type);
//         background-color: var(--#{$type});
//         color: #fff;
//         color: var(--white);
//       }
//     }
//   }
// }
